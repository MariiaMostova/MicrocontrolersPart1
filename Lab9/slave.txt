#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
#include <OneWire.h>

OneWire  ds(14);
bool isAddress = true;
byte address = 0x12;
bool isCommand = false;
byte command;

byte i;
byte present = 0;
byte type_s;
byte data[12];
byte addr[8];
float celsius;
char charNumbers[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
char char_info[23] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                     '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                     '2','7','5'};

void setWriteModeRS485() {
  PORTD |= 1 << PD2;
  delay(1);
}

ISR(USART_TX_vect) {
  PORTD &= ~(1 << PD2);
}

void setup() {
  delay(1000);
  DDRB = 0XFF;
  PORTB = 0X00;

  DDRD = 0b00000111;
  PORTD = 0b11111000;

  DDRC = 0X00;
  PORTB = 0XFF;

  Serial.begin(9600, SERIAL_8N1);
  UCSR0B |= (1 << UCSZ02) | (1 << TXCIE0);
  UCSR0A |= (1 << MPCM0);
}

void loop() {
//  if ( !ds.search(addr)) {
//    ds.reset_search();
//    delay(250);
//    return;
//  }
//  ds.reset();
//  ds.select(addr);
//  ds.write(0x44, 1);
//  delay(1000);
//  present = ds.reset();
//  ds.select(addr);
//  ds.write(0xBE);
//  for ( i = 0; i < 9; i++) {
//    data[i] = ds.read();
//  }
//  float temp = data[0] * 10 / 2;
//  int temp_int = (int) temp;
//  int info[3];
//  char char_info[3];
//  info[0] = temp_int / 100;
//  char_info[0] = charNumbers[info[0]];
//  temp_int -= info[0] * 100;
//  info[1] = temp_int / 10;
//  char_info[1] = charNumbers[info[1]];
//  temp_int -= info[1] * 10;
//  info[2] = temp_int;
//  char_info[2] = charNumbers[info[2]];

  if (Serial.available()) {
    byte inByte = Serial.read();
    if (isAddress) {
      if (address == inByte) {
        isAddress = false;
        isCommand = true;
        UCSR0A &= ~(1 << MPCM0);
      }
    } else if (isCommand) {
      isCommand = false;
      if (inByte == 0xB1) {
        isAddress = true;
        UCSR0A |= (1 << MPCM0);
        setWriteModeRS485();
        for (int i = 0; i < 23; i++) {
          Serial.write(char_info[i]);
        }
      }
    }
  }
}